from Tkinter import *
from ttk import *

from PIL import Image, ImageTk
import os

#from .lefttopframe import TopFrame
#from .leftmidframe import MidFrame
#from .leftbotframe import BotFrame
#import createjobs as cj

class LeftFrame(Frame):
    def __init__(self, parent):
        Frame.__init__(self, relief=RAISED, borderwidth=1)
        self.pack(side=LEFT, fill=BOTH, expand=1)
        self.root = parent
        self.data = parent.data
        
        self.canvas = Canvas(self, width=800, height=600)
        self.canvas.pack(fill=BOTH, expand=1)

    def update(self):
        curimg = self.data.getImage()

        if curimg is not None:
            tmpimg = Image.open(curimg)
            self.img = ImageTk.PhotoImage(tmpimg)
            self.canvas.create_image(0, self.canvas.winfo_height(),
                                     anchor=SW, image=self.img)
        else:
            tmpimg = Image.open(os.path.join(os.getcwd(),
                                          "gui/imagechecker/noimage.png"))
            self.img = ImageTk.PhotoImage(tmpimg)
            self.canvas.create_image(0, self.canvas.winfo_height(),
                                     anchor=SW, image=self.img)
            
        

 
 #   def updateCanvas(self):
 #       """
 #       NEEDS TO BE CALLED EVERYTIME self.img GETS CHANGED.
 #       Forces Canvas to redraw and display its contents.
 #       """
 #       self.__getimage()
 #       self.canvas.create_image(0, self.canvas.winfo_height(),
 #                                anchor=SW, image=self.img)
 #       
 #   def defaultCanvas(self):
 #       """
 #       defaultCanvas retrieves the default "noimage" image. If there
 #       is no images to display, of if the user is trying to display
 #       an image beyond the scope of the list this sets the image to
 #       be displayed.
 #       """
 #      # self.imgindex=-1
 #      # self.maxindex = 0)
 #       a = Image.open(os.path.join(os.getcwd(), "gui/noimage.png"))
 #       self.img = ImageTk.PhotoImage(a)
 #    
